create table tb_address
(
    id  bigint generated by default as identity primary key,
    street varchar(127),
    number       varchar(10),
    complement   varchar(127),
    neighborhood varchar(127),
    city         varchar(127),
    state        varchar(127),
    country      varchar(127),
    zip_code     varchar(50),
    address_type varchar(20)
);
--

create table tb_organization
(
    id              uuid not null primary key,
    name            varchar(127) not null,
    address_id      bigint
        unique
        constraint foreign_key_tb_organization_tb_address_id
            references tb_address,
    email           varchar(255),
    phone_number    varchar(127),
    creation_date   timestamp,
    status          varchar(50),
    max_users       integer,
    max_inventories integer
);
--
create table tb_user
(
    id              uuid not null primary key,
    username        varchar(127) not null unique,
    password        varchar(64) not null,
    email           varchar(127) not null,
    phone_number    varchar(127),
    first_name      varchar(127),
    last_name       varchar(127),
    organization_id uuid
        constraint foreign_key_tb_user_tb_organization_id
            references tb_organization,
    address_id      bigint
        unique
        constraint foreign_key_tb_user_tb_address_id
            references tb_address,
    creation_date   timestamp,
    last_login      timestamp,
    status          varchar(255)
);
--

create table tb_permission
(
    id          bigint generated by default as identity primary key,
    description varchar(255),
    name        varchar(127) not null
);
--
create table tb_mm_user_permissions
(
    permission_id bigint not null
        constraint foreign_key_tb_mm_user_permissions_tb_permission_id
            references tb_permission,
    user_id       uuid   not null
        constraint foreign_key_tb_mm_user_permissions_tb_user_id
            references tb_user,
    primary key (permission_id, user_id)
);
--

create table tb_inventory
(
    id  uuid not null primary key,
    name         varchar(127),
    organization_id uuid
        constraint foreign_key_tb_inventory_tb_organization_id
            references tb_organization,
    created_at      timestamp,
    description     text
);
--

create table tb_supplier
(
    id                   uuid not null primary key,
    name                 varchar(127) not null,
    cnpj                 varchar(14),
    contact_name         varchar(255),
    contact_email        varchar(127),
    contact_phone_number varchar(127),
    address_id           bigint
        unique
        constraint foreign_key_tb_supplier_tb_address_id
            references tb_address,
    status               varchar(255),
    creation_date        timestamp,
    additional_info      varchar(255)
);
--
create table tb_purchase
(
    id              uuid not null primary key,
    supplier_id     uuid
        constraint foreign_key_tb_purchase_tb_supplier_id
            references tb_supplier,
    organization_id uuid
        constraint foreign_key_tb_purchase_tb_organization_id
            references tb_organization,
    user_id         uuid
        constraint foreign_key_tb_purchase_tb_user_id
            references tb_user,
    purchase_date   timestamp,
    total_cost      double precision,
    additional_info varchar(255),
    status          varchar(255),
    last_update     timestamp
);
--

create table tb_product
(
    id              uuid not null primary key,
    name            varchar(255) not null,
    description     varchar(255),
    category        varchar(100),
    barcode         varchar(255),
    organization_id uuid
        constraint foreign_key_tb_product_tb_organization_id
            references tb_organization
);
--
create table tb_product_inventory
(
    id              uuid not null primary key,
    product_id      uuid
        unique
        constraint foreign_key_tb_product_inventory_tb_product_id
            references tb_product,
    suggested_price double precision,
    inventory_id    uuid
        constraint foreign_key_tb_product_inventory_tb_inventory_id
            references tb_inventory,
    register_date   timestamp
);
--
create table tb_product_batch
(
    id                   uuid not null primary key,
    product_id           uuid not null
        constraint foreign_key_tb_product_batch_tb_product_id
            references tb_product,
    product_inventory_id uuid not null
        constraint foreign_key_tb_product_batch_tb_product_inventory_id
            references tb_product_inventory,
    purchase_id          uuid not null
        constraint foreign_key_tb_product_batch_tb_purchase_id
            references tb_purchase,
    cost_per_product     double precision,
    quantity             integer,
    purchase_date        timestamp,
    expiration_date      timestamp
);
--

create table tb_sale
(
    id                          uuid not null primary key,
    user_id                     uuid
        constraint foreign_key_tb_sale_tb_user_id
            references tb_user,
    sale_date                   timestamp,
    discount                 double precision,
    total_price_before_discount double precision
);
--
create table tb_sale_product
(
    id                uuid not null
        primary key,
    product_batch_id  uuid not null
        constraint foreign_key_tb_sale_product_tb_product_batch_id
            references tb_product_batch,
    price_per_product double precision,
    quantity          integer,
    sale_id           uuid
        constraint foreign_key_tb_sale_product_tb_sale_id
            references tb_sale
);
--
